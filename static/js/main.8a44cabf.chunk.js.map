{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","console","log","newText","toUpperCase","showAlert","toLowerCase","trim","charAt","slice","trimText","split","capitilizedWords","forEach","element","push","join","navigator","clipboard","writeText","filter","defaultProps","aboutText","Alert","word","height","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a44cabf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n                <li className=\"navbar-brand\" href=\"#\">{props.title}</li>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            <li className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</li>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link active\" to=\"/about\">{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-4`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode!</label>\n                    </div>\n                    <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About text here'\n}","import React, { useState } from 'react';\n\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        if (text) {\n            console.log(\"Uppercase was clicked!\");\n            let newText = text.toUpperCase();\n            setText(newText);\n            props.showAlert(\"Converted to uppercase!\", \"success\");\n        }\n\n    };\n\n\n    const handleLoClick = () => {\n        if (text) {\n            // console.log(\"Lowercase was clicked!\");\n            let newText = text.toLowerCase();\n            setText(newText);\n            props.showAlert(\"Converted to lowercase!\", \"success\");\n        }\n\n    };\n\n    const handleClearClick = () => {\n        if (text) {\n            let newText = \"\";\n            setText(newText);\n            props.showAlert(\"Cleared Text!\", \"danger\");\n        }\n\n    };\n\n    //  This function returns trimed(eats extra white spaces before & after) version of our text input!\n    const handleTrimClick = () => {\n        if (text) {\n            let newText = text.trim();\n            setText(newText);\n            props.showAlert(\"Trimed Your Text!\", \"success\");\n        }\n\n    };\n\n    //  this function capitilize first latter of our whole sentence!\n    const handleCapitizeFirstLatterClick = () => {\n        if (text) {\n            let newText = text.charAt(0).toUpperCase() + text.slice(1);\n            setText(newText);\n            props.showAlert(\"Capitalized First Latter!\", \"success\");\n        }\n\n    };\n\n    const handleCopyClick = () => {\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    };\n\n    const handleExtraSpacesClick = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert(\"Removed Extra Spaces!\", \"success\");\n    }\n\n\n    // This fuction capitilize first latter of each word in our whole sentence!!\n    const handleCapitilizeEachFirstLatterClick = () => {\n        if (text) {\n            const newText = text => {\n                let trimText = text.trim();\n                trimText = trimText.split(' ');\n                let capitilizedWords = [];\n                trimText.forEach(element => {\n                    capitilizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\n                });\n                return capitilizedWords.join(' ');\n            };\n            setText(newText);\n            props.showAlert(\"Capitalized Each first latter of your sentence !\", \"success\");\n        }\n    };\n\n\n    const handleOnChange = (event) => {\n        // console.log(\"on change\");\n        setText(event.target.value);\n    }\n    const [text, setText] = useState('');\n    return (\n        <>\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                <h1 className=\"mb-4\">{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"FormControl\" className=\"form-label mx-2\">Example textarea</label>\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? '#12332d' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"FormControl\" rows=\"10\"></textarea>\n                </div>\n                <button disabled={text.length === 0} className=\"btn btn-success btn-lg mx-1 my-1 shadow\" onClick={handleUpClick}>Convert to Uppercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary btn-lg mx-1 my-1 shadow\" onClick={handleLoClick}>Convert to Lowercase</button>\n                <button disabled={text.length === 0} className=\"btn btn-danger btn-lg mx-1 my-1 shadow\" onClick={handleClearClick}>Clear Text</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary btn-lg mx-1 my-1 shadow\" onClick={handleTrimClick}>Trim Text</button>\n                <button disabled={text.length === 0} className=\"btn btn-warning btn-lg mx-1 my-1 shadow\" onClick={handleCapitizeFirstLatterClick}>Capitilize First latter</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary btn-lg mx-1 my-1 shadow\" onClick={handleCapitilizeEachFirstLatterClick}>Capitilize Each First latter</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary btn-lg mx-1 my-1 shadow\" onClick={handleCopyClick}>Copy Text!</button>\n                <button disabled={text.length === 0} className=\"btn btn-primary btn-lg mx-1 my-1 shadow\" onClick={handleExtraSpacesClick}>Remove Extra Spaces!</button>\n            </div>\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                <h2>Your text summary</h2>\n                <p><b>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length}</b> words and <b>{text.length}</b> characters!</p>\n                <p><b>{(text.split(\" \").filter((element) => { return element.length !== 0 }).length) === 0 ? 0 : 0.008 * (text.split(\" \").filter((element) => { return element.length !== 0 }).length)}</b> Minute read!</p>\n                <h2>Text preview</h2>\n                <div style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n                    <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\n\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize = (word) => {\n        let newText = word.charAt(0).toUpperCase() + word.slice(1);\n        return newText;\n    };\n    return (\n        <div style={{ height: '50px' }}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\n            </div>}\n        </div>\n    )\n}\n\nexport default Alert\n","// import logo from './logo.svg';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#08112cf7';\n      showAlert(\"Dark Mode has been enbled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enbled\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Navbar /> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About Utils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Switch> */}\n      {/* /users --> Component 1 */}\n      {/* /users/ --> Component 2*/}\n      {/* <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route> */}\n      {/* <Route exact path=\"/\"> */}\n      <TextForm heading=\"Try TextUtils - Word Counter, Character Couter, Remove extra Spaces\" mode={mode} showAlert={showAlert} />\n      {/* </Route> */}\n      {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}